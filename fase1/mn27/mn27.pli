#
# mn27
#
#

/*------------------------SETS----------------------------------------------*/

set V;
set E within (V cross V);



/*--------------------VARIÁVEIS--------------------------------------------*/

#  yj = cores usadas; xij=cor j do vertice i*/
var y {j in V}, binary;
var x {i in V, j in V}, binary; 


/*--------------------FUNCAO OBJETIVO--------------------------------------*/

minimize z: sum{i in V} y[i];



/*--------------------RESTRIÇÕES-------------------------------------------*/

# Restricão 1: um vértice i so pode receber uma cor j
s.t. r1{i in V}: sum{j in V} x[i,j] = 1;

# Restrição 2 e 3: se algum vértice i receber a cor j, então y[j] = 1 
s.t. r2{i in V, j in V}: x[i,j] <= y[j];


# Restrição 4: vértices adjacentes nao podem ter a mesma cor
s.t. r4{(i,k) in E, j in V}: x[i,j] + x[k,j] <= 1;


solve;

printf: "%d", sum{i in V} y[i] > "mn27.out";

end;
